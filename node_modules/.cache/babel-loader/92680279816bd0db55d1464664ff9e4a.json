{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimguan/Desktop/Web Dev/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: '831a251bab8d4b8fb8693919be088ef8'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const clarifaiFace = data.outputs[0].data.regions;\n      const allFaces = clarifaiFace.map(face => {\n        return {\n          leftCol: face.region_info.bounding_box.left_col * width,\n          topRow: face.region_info.bounding_box.top_row * height,\n          rightCol: width - face.region_info.bounding_box.right_col * width,\n          bottomRow: height - face.region_info.bounding_box.bottom_row * height\n        };\n      });\n      return allFaces;\n    };\n\n    this.displayFaceBox = dimensions => {\n      this.setState(prevState => ({\n        dimensions: [...prevState.dimensions, ...dimensions]\n      }));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      this.setState({\n        dimensions: []\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      dimensions: [],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      dimensions\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          dimensions: dimensions,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kimguan/Desktop/Web Dev/smart-brain/src/App.js"],"names":["React","Component","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","image","document","getElementById","width","Number","height","clarifaiFace","outputs","regions","allFaces","map","face","leftCol","region_info","bounding_box","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","dimensions","prevState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","isSignedIn","password","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js';\n\nconst app = new Clarifai.App({\n  apiKey:'831a251bab8d4b8fb8693919be088ef8'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl:'',\n      dimensions: [],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id : '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  } \n   \n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const clarifaiFace = data.outputs[0].data.regions\n    const allFaces = clarifaiFace.map( face => {\n      return({\n      leftCol: face.region_info.bounding_box.left_col * width,\n      topRow : face.region_info.bounding_box.top_row * height,\n      rightCol: width - (face.region_info.bounding_box.right_col * width),\n      bottomRow: height - (face.region_info.bounding_box.bottom_row * height)\n    })\n  })\n    return allFaces\n  }\n\n  displayFaceBox = (dimensions) => {\n    this.setState(prevState => ({\n      dimensions: [...prevState.dimensions, ...dimensions]\n    }))\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    this.setState({dimensions:[] });\n\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response => \n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n  const { isSignedIn, imageUrl, route, dimensions} = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className ='particles'\n       params={particlesOptions}\n      />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { route === 'home' \n        ? <div>\n          <Logo /> \n          <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n          <ImageLinkForm \n            onInputChange={this.onInputChange} \n            onButtonSubmit = {this.onButtonSubmit}\n            /> \n          <FaceRecognition dimensions={dimensions} imageUrl = {imageUrl} />\n          </div>\n        : (\n          route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}