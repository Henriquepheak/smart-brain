{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimguan/Desktop/Web Dev/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '831a251bab8d4b8fb8693919be088ef8'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  dimensions: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const clarifaiFace = data.outputs[0].data.regions;\n      const allFaces = clarifaiFace.map(face => {\n        return {\n          leftCol: face.region_info.bounding_box.left_col * width,\n          topRow: face.region_info.bounding_box.top_row * height,\n          rightCol: width - face.region_info.bounding_box.right_col * width,\n          bottomRow: height - face.region_info.bounding_box.bottom_row * height\n        };\n      });\n      return allFaces;\n    };\n\n    this.displayFaceBox = dimensions => {\n      this.setState(prevState => ({\n        dimensions: [...prevState.dimensions, ...dimensions]\n      }));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      this.setState({\n        dimensions: []\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          let numberOfFaces = response.outputs[0].data.regions.length;\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              faces: numberOfFaces,\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      dimensions: [],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      dimensions\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          dimensions: dimensions,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kimguan/Desktop/Web Dev/smart-brain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","dimensions","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","image","document","getElementById","width","Number","height","clarifaiFace","outputs","regions","allFaces","map","face","leftCol","region_info","bounding_box","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","prevState","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","numberOfFaces","length","fetch","method","headers","body","JSON","stringify","faces","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey:'831a251bab8d4b8fb8693919be088ef8'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState ={\n  input: '',\n  imageUrl: '',\n  dimensions: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  } \n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      dimensions: [],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n   \n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const clarifaiFace = data.outputs[0].data.regions;\n    const allFaces = clarifaiFace.map( face => {\n      return({\n      leftCol: face.region_info.bounding_box.left_col * width,\n      topRow : face.region_info.bounding_box.top_row * height,\n      rightCol: width - (face.region_info.bounding_box.right_col * width),\n      bottomRow: height - (face.region_info.bounding_box.bottom_row * height)\n    })\n  })\n    return allFaces\n  }\n\n  displayFaceBox = (dimensions) => {\n    this.setState(prevState => ({\n      dimensions: [...prevState.dimensions, ...dimensions]\n    }))\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    this.setState({dimensions:[] });\n\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response => {\n      if (response) {\n        let numberOfFaces = response.outputs[0].data.regions.length;\n        fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            faces: numberOfFaces,\n            id: this.state.user.id,\n          })\n      })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user,{entries:count}))\n        })\n      }\n\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n   render() {\n    const { isSignedIn, imageUrl, route, dimensions } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n                <Rank\n                 name={this.state.user.name}\n                 entries={this.state.user.entries}\n                 />\n\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition dimensions={dimensions} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}