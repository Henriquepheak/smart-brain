{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimguan/Desktop/Web Dev/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: '831a251bab8d4b8fb8693919be088ef8'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const clarifaiFace = data.outputs[0].data.regions;\n      const allFaces = clarifaiFace.map(face => {\n        return {\n          leftCol: face.region_info.bounding_box.left_col * width,\n          topRow: face.region_info.bounding_box.top_row * height,\n          rightCol: width - face.region_info.bounding_box.right_col * width,\n          bottomRow: height - face.region_info.bounding_box.bottom_row * height\n        };\n      });\n      return allFaces;\n    };\n\n    this.displayFaceBox = dimensions => {\n      this.setState(prevState => ({\n        dimensions: [...prevState.dimensions, ...dimensions]\n      }));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      this.setState({\n        dimensions: []\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      dimensions: [],\n      route: 'signin',\n      isSignedIn: false\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      dimensions\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          dimensions: dimensions,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kimguan/Desktop/Web Dev/facerecognitionbrain/src/App.js"],"names":["React","Component","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","image","document","getElementById","width","Number","height","clarifaiFace","outputs","regions","allFaces","map","face","leftCol","region_info","bounding_box","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","dimensions","setState","prevState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js';\n\nconst app = new Clarifai.App({\n  apiKey:'831a251bab8d4b8fb8693919be088ef8'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl:'',\n      dimensions: [],\n      route: 'signin',\n      isSignedIn: false,\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const clarifaiFace = data.outputs[0].data.regions\n    const allFaces = clarifaiFace.map( face => {\n      return({\n      leftCol: face.region_info.bounding_box.left_col * width,\n      topRow : face.region_info.bounding_box.top_row * height,\n      rightCol: width - (face.region_info.bounding_box.right_col * width),\n      bottomRow: height - (face.region_info.bounding_box.bottom_row * height)\n    })\n  })\n    return allFaces\n  }\n\n  displayFaceBox = (dimensions) => {\n    this.setState(prevState => ({\n      dimensions: [...prevState.dimensions, ...dimensions]\n    }))\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    this.setState({dimensions:[] });\n\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response => \n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n      this.setState({isSignedIn:false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route: route });\n  }\n\n  render() {\n  const { isSignedIn, imageUrl, route, dimensions} = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className ='particles'\n       params={particlesOptions}\n      />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { route === 'home' \n        ? <div>\n          <Logo /> \n          <Rank />\n          <ImageLinkForm \n            onInputChange={this.onInputChange} \n            onButtonSubmit = {this.onButtonSubmit}\n            /> \n          <FaceRecognition dimensions={dimensions} imageUrl = {imageUrl} />\n          </div>\n        : (\n          route === 'signin'\n          ?<Signin onRouteChange={this.onRouteChange} />\n          :<Register onRouteChange={this.onRouteChange} />\n          )\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}